::OpenFrameworks SuperCollider Server Host::

This project shows how to run a SuperCollider server from within the audio callback in openFrameworks (version 007).  This means you can generate audio or control input from your OF app, and then grab SC's audio output to control openGL visualisations etc etc etc, or something completely different?

It's based on Gerard Roma's SuperColliderAU project.

Usage:  
In initialize(), change SC_PLUGIN_PATH and SC_SYNTHDEF_PATH to match your system.
Running this project will start a blank OF app along with a SC server.  You can access the server from the SuperCollider app, where you can build a synthdef graph to generate or process audio.  For example, try this:

u = Server(\scau, NetAddr("127.0.0.1", 9989)); 
u.serverRunning = true;
u.ping(10); 
//high pass the input
z = { HPF.ar(AudioIn.ar([1,2]), 1000) }.play(u)
z.free

See the SuperColliderAU help file for more details.

Limitations:  There is no event scheduling in the server. SC needs timing info for this as OF does not expose time stamps for audio buffers.

How it works: A variant of libscsynth was built from the SuperCollider source, with the following changes:
(1) -DSC_AUDIO_API=SC_AUDIO_API_AUDIOUNITS was added to the 'Other c-flags' configuration.
(2) '_AUCallback' was added to the list of exports in libscsynth_exp.
This static library is included in this repository as 'libscsynthAU.a'





